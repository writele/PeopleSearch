// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PeopleSearch;

namespace PeopleSearch.Migrations
{
    [DbContext(typeof(PersonContext))]
    [Migration("20190826115824_InitialMigration")]
    partial class InitialMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.11-servicing-32099")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("PeopleSearch.Models.Address", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address1");

                    b.Property<string>("Address2");

                    b.Property<string>("City");

                    b.Property<string>("State");

                    b.Property<int?>("ZipCode");

                    b.HasKey("Id");

                    b.ToTable("Addresses");

                    b.HasData(
                        new { Id = 1, Address1 = "1000 Wayne Manor Dr.", City = "Gotham", State = "NJ", ZipCode = 22222 },
                        new { Id = 2, Address1 = "404 7th St.", Address2 = "Apt. 603", City = "National City", State = "WA", ZipCode = 54545 },
                        new { Id = 3, Address1 = "1200 Main Ave.", Address2 = "Suite 300", City = "New York City", State = "NY", ZipCode = 72172 },
                        new { Id = 4, Address1 = "1418 Trade St.", Address2 = "Apt 1606", City = "Metropolis", State = "PA", ZipCode = 72172 },
                        new { Id = 5, Address1 = "1333 West Sharon St.", City = "Gotham", State = "NJ", ZipCode = 22244 }
                    );
                });

            modelBuilder.Entity("PeopleSearch.Models.Interest", b =>
                {
                    b.Property<int>("InterestId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Title");

                    b.HasKey("InterestId");

                    b.ToTable("Interests");

                    b.HasData(
                        new { InterestId = 1, Title = "Books" },
                        new { InterestId = 2, Title = "Writing" },
                        new { InterestId = 3, Title = "Movies" },
                        new { InterestId = 4, Title = "Sports" },
                        new { InterestId = 5, Title = "Hiking" },
                        new { InterestId = 6, Title = "Travel" },
                        new { InterestId = 7, Title = "Animals" },
                        new { InterestId = 8, Title = "Video Games" },
                        new { InterestId = 9, Title = "Board Games" }
                    );
                });

            modelBuilder.Entity("PeopleSearch.Models.Person", b =>
                {
                    b.Property<int>("PersonId");

                    b.Property<int>("AddressId");

                    b.Property<int>("Age");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(80);

                    b.Property<string>("ImageUrl");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(80);

                    b.HasKey("PersonId");

                    b.ToTable("Persons");

                    b.HasData(
                        new { PersonId = 1, AddressId = 1, Age = 37, FirstName = "Bruce", ImageUrl = "/images/bwayne.jpg", LastName = "Wayne" },
                        new { PersonId = 2, AddressId = 2, Age = 22, FirstName = "Kara", ImageUrl = "/images/kdanvers.jpg", LastName = "Danvers" },
                        new { PersonId = 3, AddressId = 3, Age = 54, FirstName = "Diana", ImageUrl = "/images/dprince.jpg", LastName = "Prince" },
                        new { PersonId = 4, AddressId = 4, Age = 35, FirstName = "Clark", ImageUrl = "/images/ckent.jpg", LastName = "Kent" },
                        new { PersonId = 5, AddressId = 5, Age = 25, FirstName = "Barbara", ImageUrl = "/images/bgordon.jpg", LastName = "Gordon" }
                    );
                });

            modelBuilder.Entity("PeopleSearch.Models.PersonInterest", b =>
                {
                    b.Property<int>("PersonId");

                    b.Property<int>("InterestId");

                    b.HasKey("PersonId", "InterestId");

                    b.HasIndex("InterestId");

                    b.ToTable("PersonInterests");

                    b.HasData(
                        new { PersonId = 1, InterestId = 1 },
                        new { PersonId = 1, InterestId = 4 },
                        new { PersonId = 1, InterestId = 6 },
                        new { PersonId = 2, InterestId = 2 },
                        new { PersonId = 2, InterestId = 3 },
                        new { PersonId = 2, InterestId = 9 },
                        new { PersonId = 3, InterestId = 5 },
                        new { PersonId = 3, InterestId = 6 },
                        new { PersonId = 3, InterestId = 7 },
                        new { PersonId = 4, InterestId = 3 },
                        new { PersonId = 4, InterestId = 4 },
                        new { PersonId = 4, InterestId = 8 },
                        new { PersonId = 5, InterestId = 1 },
                        new { PersonId = 5, InterestId = 8 }
                    );
                });

            modelBuilder.Entity("PeopleSearch.Models.Person", b =>
                {
                    b.HasOne("PeopleSearch.Models.Address", "Address")
                        .WithOne("Person")
                        .HasForeignKey("PeopleSearch.Models.Person", "PersonId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("PeopleSearch.Models.PersonInterest", b =>
                {
                    b.HasOne("PeopleSearch.Models.Interest", "Interest")
                        .WithMany("PersonInterests")
                        .HasForeignKey("InterestId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("PeopleSearch.Models.Person", "Person")
                        .WithMany("PersonInterests")
                        .HasForeignKey("PersonId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
